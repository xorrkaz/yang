module ietf-data-node-tags {
  yang-version 1.1;
  namespace "urn:ietf:params:xml:ns:yang:ietf-data-node-tags";
  prefix ntags;

  import ietf-yang-types   { prefix yang; }
  import ietf-netconf-acm  { prefix nacm; }
  import ietf-module-tags  { prefix tags; }
  organization
    "IETF NetMod Working Group (NetMod)";
  contact
    "WG Web:  <https://tools.ietf.org/wg/netmod/>
     WG List: <mailto:netmod@ietf.org>

     Author:  Ran Tao
              <mailto:taoran20@huawei.com>
     Author:  Qin Wu
              <mailto:bill.wu@huawei.com>";

  // RFC Ed.: replace XXXX with actual RFC number and
  // remove this note.

  description
    "This module describes a mechanism associating tags with YANG data
     node within YANG modules. Tags may be IANA assigned or privately defined.
     Copyright (c) 2018 IETF Trust and the persons identified as
     authors of the code. All rights reserved.

     Redistribution and use in source and binary forms, with or
     without modification, is permitted pursuant to, and subject to
     the license terms contained in, the Simplified BSD License set
     forth in Section 4.c of the IETF Trust's Legal Provisions
     Relating to IETF Documents
     (https://trustee.ietf.org/license-info).

     The key words 'MUST', 'MUST NOT', 'REQUIRED', 'SHALL', 'SHALL
     NOT', 'SHOULD', 'SHOULD NOT', 'RECOMMENDED', 'NOT RECOMMENDED',
     'MAY', and 'OPTIONAL' in this document are to be interpreted as
     described in BCP 14 [RFC2119] [RFC8174] when, and only when,
     they appear in all capitals, as shown here.

     This version of this YANG module is part of RFC XXXX
     (https://tools.ietf.org/html/rfcXXXX); see the RFC itself for
     full legal notices.";

  // RFC Ed.: update the date below with the date of RFC publication
  // and RFC number and remove this note.

  revision 2019-05-03 {
    description
      "Initial revision.";
    reference "RFC XXXX: YANG Data Node Tags";
  }
typedef node-tag {
    type string {
      length "1..max";
      pattern '[\S ]+';
    }
    description
      "A tag is a type 'string' value that does not include carriage
       return, newline or tab characters. It SHOULD begin with a
       registered prefix; however, tags without a registered prefix
       SHOULD NOT be treated as invalid.";
  }
extension node-tag {
      argument node-tag;
      description
        "The argument 'tag' is of type 'tag'. This extension statement
         is used by module authors to indicate the data node tags that SHOULD be
         added automatically by the system. As such the origin of the
         value for the pre-defined tags should be set to 'system'
         [RFC8342].";
    }
 augment "/tags:module-tags/tags:module" {
   description
     "Augment the Tags module with data node tag attributes";
    container data-node-tags {
      description
        "Contains the list of data nodes and their associated tags";
      list data-node {
        key "node-name";
        description
          "A list of modules and their associated tags";
        leaf node-name {
          type nacm:node-instance-identifier;
          mandatory true;
          description
            "The YANG module name.";
        }
        leaf-list node-tag {
          type node-tag;
          description
            "Tags associated with the data node within YANG module. See
             the IANA 'YANG Data Node Tag Prefixes' registry for reserved
             prefixes and the IANA'IETF YANG Data Node Tags' registry for
             IETF tags.

             The 'operational' state [RFC8342] view of this list is
             constructed using the following steps:

             1) System tags (i.e., tags of 'system' origin) are added.
             2) User configured tags (i.e., tags of 'intended' origin)
             are added.
             3) Any tag that is equal to a masked-tag is removed.";
        }
        leaf-list node-masked-tag {
          type node-tag;
          description
            "The list of tags that should not be associated with this
             data node. The user can remove (mask) tags from the
             operational state datastore [RFC8342] by adding them to
             this list. It is not an error to add tags to this list
             that are not associated with the data node within the module,
             but they have no operational effect.";
        }
      leaf group-id {
        type string;
        description
         "This group ID is used to identify a set of data nodes
         of the same group which have a common characteristic.";
     }
      }
    }
  }
  }
